#!/usr/bin/env ruby

$LOAD_PATH << File.dirname(__FILE__) + "/../lib" if $0 == __FILE__
require 'optparse'
require 'southy'

CONFIG = { :verbose => false, :write => false }
OPERATIONS = %w(init run start stop restart status add remove list history)

option_parser = OptionParser.new do |opts|
  opts.banner = "Southy #{Southy::VERSION}, auto check-in for Southwest flights\nUsage: #{__FILE__} [#{OPERATIONS.join('|')}] [options]"

  opts.on("-v", "--verbose", "Show command executions") do |verbose|
    CONFIG[:verbose] = true
  end

  opts.on("-w", "--write", "Persist command") do |verbose|
    CONFIG[:write] = true
  end

  opts.separator <<-EOS

Supported commands:

 init <first_name> <last_name>            Initialize Southy with your personal info
 list                                     Display upcoming flight check-ins
 history                                  Display past flight check-ins
 add <conf> [<first_name> <last_name>]    Add a new check-in
 remove <conf>                            Remove a check-in
 run                                      Run Southy in the foreground (kill with ctrl-c)
 start [-w]                               Start Southy so that it can check you in
 stop [-w]                                Stop Southy
 restart                                  Stop and start Southy
 status                                   Show Southy's status (and PID if running)

-w will persist the start/stop command so the agent will load on startup or never load, respectively.

Example:


EOS
end
option_parser.parse!


op = ARGV.shift
if OPERATIONS.include?(op)
  begin
    Southy::CLI.new.send(op.to_sym, ARGV)
  rescue ArgumentError => ex
    puts ex.message
  rescue Exception => e
    puts "Uh oh, I didn't expect this:"
    puts e.message
    puts e.backtrace.join("\n")
  end
else
  puts option_parser.help
end